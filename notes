学习前准备：
1.学习方法：1）指法速度（盲打）2）编程思路
2.好的截图工具
3.好的记笔记软件
4.好的电脑

结论验证法：笔记记录重点结论

常用windows的DOS命令
    win+r:打开运行窗口
    在运行窗口文本框中输入cmd,回车
    
    mkdir abc:创建目录abc
    复制：左键选中，右键单击保存到剪切板，再单击复制完成
    
    切换盘符   c:    d: e:
    切换目录  cd(change directory)
    cd 路径
        相对路径
            不以盘符开始，相对于当前所在位置而言
        绝对路径
            路径起点是盘符的
    cls清屏
    dir查看当前目录
    exit退出DOS命令窗口
    
    cd ..回到上级目录（相对路径）
    cd \回到根目录
    cd .回到当前目录
    
    del *.class 模糊匹配，可以批量删除
    rd    删除文件夹
    
    IP地址：计算机在同一网络中的唯一标识
    ipconfig查看IP地址的配置信息
    ipconfig /all 查看详细配置，其中物理地址叫MAC地址，具有全球唯一性
    
    ping IP地址
    ping www.baidu.com -t持续ping
    ctrl + c可以终止执行在执行的命令
    
常用组合键   ctrl+
    复制  c
    粘贴  v
    剪切  x
    保存  s
    
    撤销  z
    重做  y
    
    回到行首(无ctrl)    home
    回到行尾(无ctrl)    end
    
    回到文章首   home
    回到文章尾   end
    
    选中一个单词  ctrl + shift + 右箭头或者左箭头
    选中一行    鼠标双击    shift + home/end
    选中一个单词  鼠标三击
    
    全选  a
    查找  f
    
javase
    java底层是C++实现的
    JDK(Java开发工具箱，是最根本的一个环境)
    SE(标准版，基础语法+基础库)
    EE(企业版，为企业提供解决方案)
    ME(微型版，为微型设备做嵌入式开发)
    
    JVM（是用c++写好的一个虚拟电脑）:java通过java虚拟机操作内存
    
    cpu:处理器
    内存：临时存储
    硬盘：长期存储
    主板：是一个载体，cpu 内存条 硬盘都在主板上，各部分有线连起来
    
    java有内存自动回收机制（GC）由JVM负责调度
    
    java完全/完美支持多线程并发
    
    可移植性/跨平台：java实际是在JVM上运行，所以可以跨平台，安装JDK的时候自动安装JVM,JDK有windows版，mac版
    JDK
    JRE(java运行环境)
    JVM
    JDK>JRE>JVM     JVM不能独立安装
    
    编译阶段（javac命令）和运行阶段（java命令）可以在不同os上
    .java是源文件
    .class是字节码文件（不是二进制文件）
    
    javac 源文件路径，如 javac C:\Users\60313\Desktop\life\HelloWorld.java
    把文件直接拖进DOS命令窗即可
    java 类名(不能是路径)  如java HelloWorld
    
    java 环境变量：classpath(给类加载器指路，隶属于java）        java_home
    
    classloader(类加载器)默认从当前路径加载
    //单行注释
    /*
    多行注释
    */
    /**
    *
    *javadoc注释
    *
    */
    
    类体  main方法
    
    一个java源文件可以定义多个class
    一个文件的名字必须是的public类的类名
    public类只能有一个 或 没有
    
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~第一阶段完成的分割线~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    标识符：表示类名，方法名，变量名，接口名，常量名
    命名规则：
        1.由数字，字母，下划线_，美元符号$组成
        2.不能由数字开头
        3.不能是关键字和保留字,如：public,class,static,void
        4.严格区分大小写
        5.理论上没有长度限制，可以用汉字
    命名规范：（规则是法律，强制，规范是道德，不强制，但会让程序更好）
        1.见名知意
        2.遵循驼峰命名方式：HelloWorld
        3.类名和接口名首字母大写，单词首字母大写
        4.变量名和方法名，首字母小写
        5.常量名全部大写，单词之间用下划线衔接：USER_AGE
    关键字：Java中的关键字都是全部小写，public
    变量(三要素：数据类型，名字，保存的值)：
        int : 4 byte
    变量的分类：
        方法体中定义的：局部变量
        方法体外，类内：成员变量
    就近原则，优先局部变量
    数据类型：
        基本数据类型：
            整数型： byte[-128,127], short[-32768,32767], int[-21473648,21473647] , long
            浮点型: float ,double ,
            布尔型: boolean
            字符型: char[0,65535]
        引用数据类型：
            String,主要面对对象
    转义字符：\
        \t ： 制表符
        \n : 换行
        \' : '
        \\ : \
        \u : unicode编码，16进制
    进制：
        十进制：10      10
        八进制：010     8
        十六进制：0x10   16
        二进制：0b10    2
        long a=2147483648 L ;
    运算符：
        算术运算符: + -* / %
        关系运算符: > < 
        逻辑运算符： & | ！ && ||
        赋值运算符： =
        三目运算符：    ？  ：
        字符串连接运算符： +
    怎么接受用户键盘输入
        java.util.Scanner s=new java.util.Scanner(System.in);
        int i=s.nextInt()
        String str= s.next();
    
    控制语句：
        选择语句：
            if
            switch
        循环语句:
            for
            while
            do...while...
        转向语句
            break
            continue
            return
        
        方法的定义：可以完成特定功能的可重复利用的代码片段
            【修饰符列表】 返回值类型 方法名（形式参数列表）{
                方法体；
            }
        方法名要见名知意，首字母小写，其余单词首字母大写
        除了void方法，其余要带return
        
        形参都是局部变量
        
        方法调用：
            类名.方法名（实际参数列表）；
            
        三目运算符可以使代码变得很简练
        JVM三块主要内存：栈内存，堆内存，方法区内存
        方法重载：在同一个类中，方法名相同，参数列表不同，即为重载
            代码美观
            功能相似的方法名相同，易于以后的代码编写
            
        递归:方法自身调用自身，要有结束条件，否则会发生StackOverflowError
    
    面对对象
        面向过程和面向对象有什么区别
            面向过程：注重步骤和因果关系
                缺点：耦合度高，拓展差
                优点：对于小型项目，效率高
            面向对象：更符合人类的思维方式，即将现实世界分割成不同单元，每一个单元都实现成对象，然后驱动各个对象协作起来形成系统
                缺点：
                优点：耦合度低，扩展力强
        OOA/OOD/OOP
            OOA：面向对象分析（Object-Oriented Analysis）
            OOD：面向对象设计（Design）
            OOP：面向对象编程（Programming）
            pm:项目经理Project Manager
        面对对象三大特征：
            封装：
            继承：
            多态：
        类和对象的概念：
            类是抽象的
            对象是实际存在的，对象也称为实例
            
            [修饰符列表] class 类名 {
                //类 = 属性 + 方法
                //属性=变量
                //方法描述动作
            }
        对象的创建和使用：
            new 类名（）；
            类名 变量名=new 类名（）;
        没有手动赋值就是默认值，0，null,false
        栈中是局部变量，堆中是成员变量（实例变量）
        对象是new出来的，存在堆中
        引用是存储对象地址的一个变量
